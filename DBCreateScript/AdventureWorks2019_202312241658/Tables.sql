USE [CopyOfAdventureWorks2019]
GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[dbo].[DatabaseLog]')) DROP Table [dbo].[DatabaseLog]
GO
CREATE TABLE [dbo].[DatabaseLog](	  [DatabaseLogID] INT NOT NULL IDENTITY(1,1)	, [PostTime] DATETIME NOT NULL	, [DatabaseUser] SYSNAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Event] SYSNAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Schema] SYSNAME COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [Object] SYSNAME COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [TSQL] NVARCHAR(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [XmlEvent] XML NOT NULL	, CONSTRAINT [PK_DatabaseLog_DatabaseLogID] PRIMARY KEY ([DatabaseLogID] ASC))

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[dbo].[DatabaseLog1]')) DROP Table [dbo].[DatabaseLog1]
GO
CREATE TABLE [dbo].[DatabaseLog1](	  [DatabaseLogID] INT NOT NULL IDENTITY(1,1)	, [PostTime] DATETIME NOT NULL	, [DatabaseUser] SYSNAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Event] SYSNAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Schema] SYSNAME COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [Object] SYSNAME COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [TSQL] NVARCHAR(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [XmlEvent] XML NOT NULL	, CONSTRAINT [PK_DatabaseLog1_DatabaseLogID] PRIMARY KEY ([DatabaseLogID] ASC))

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[dbo].[ErrorLog]')) DROP Table [dbo].[ErrorLog]
GO
CREATE TABLE [dbo].[ErrorLog](	  [ErrorLogID] INT NOT NULL IDENTITY(1,1)	, [ErrorTime] DATETIME NOT NULL DEFAULT(getdate())	, [UserName] SYSNAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ErrorNumber] INT NOT NULL	, [ErrorSeverity] INT NULL	, [ErrorState] INT NULL	, [ErrorProcedure] NVARCHAR(126) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [ErrorLine] INT NULL	, [ErrorMessage] NVARCHAR(4000) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, CONSTRAINT [PK_ErrorLog_ErrorLogID] PRIMARY KEY ([ErrorLogID] ASC))

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[dbo].[kasjhfd]')) DROP Table [dbo].[kasjhfd]
GO
CREATE TABLE [dbo].[kasjhfd](	  [CountryRegionCode] NVARCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ModifiedDate] DATETIME NOT NULL)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[dbo].[Payroll]')) DROP Table [dbo].[Payroll]
GO
CREATE TABLE [dbo].[Payroll](	  [ID] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [OrganID] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [LawID] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[dbo].[Payroll2]')) DROP Table [dbo].[Payroll2]
GO
CREATE TABLE [dbo].[Payroll2](	  [ID] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [OrganID] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [LawID] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[HumanResources].[Department]')) DROP Table [HumanResources].[Department]
GO
CREATE TABLE [HumanResources].[Department](	  [DepartmentID] SMALLINT NOT NULL IDENTITY(1,1)	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [GroupName] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_Department_DepartmentID] PRIMARY KEY ([DepartmentID] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_Department_Name] ON [HumanResources].[Department] ([Name] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[HumanResources].[Employee]')) DROP Table [HumanResources].[Employee]
GO
CREATE TABLE [HumanResources].[Employee](	  [BusinessEntityID] INT NOT NULL	, [NationalIDNumber] NVARCHAR(15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [LoginID] NVARCHAR(256) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [OrganizationNode] HIERARCHYID NULL	, [OrganizationLevel] AS ([OrganizationNode].[GetLevel]())	, [JobTitle] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [BirthDate] DATE NOT NULL	, [MaritalStatus] NCHAR(1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Gender] NCHAR(1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [HireDate] DATE NOT NULL	, [SalariedFlag] FLAG NOT NULL DEFAULT((1))	, [VacationHours] SMALLINT NOT NULL DEFAULT((0))	, [SickLeaveHours] SMALLINT NOT NULL DEFAULT((0))	, [CurrentFlag] FLAG NOT NULL DEFAULT((1))	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_Employee_BusinessEntityID] PRIMARY KEY ([BusinessEntityID] ASC))ALTER TABLE [HumanResources].[Employee] WITH CHECK ADD CONSTRAINT [FK_Employee_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [Person].[Person] ([BusinessEntityID])ALTER TABLE [HumanResources].[Employee] CHECK CONSTRAINT [FK_Employee_Person_BusinessEntityID]CREATE NONCLUSTERED INDEX [IX_Employee_OrganizationNode] ON [HumanResources].[Employee] ([OrganizationNode] ASC)CREATE NONCLUSTERED INDEX [IX_Employee_OrganizationLevel_OrganizationNode] ON [HumanResources].[Employee] ([OrganizationLevel] ASC, [OrganizationNode] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_Employee_LoginID] ON [HumanResources].[Employee] ([LoginID] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_Employee_NationalIDNumber] ON [HumanResources].[Employee] ([NationalIDNumber] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_Employee_rowguid] ON [HumanResources].[Employee] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[HumanResources].[EmployeeDepartmentHistory]')) DROP Table [HumanResources].[EmployeeDepartmentHistory]
GO
CREATE TABLE [HumanResources].[EmployeeDepartmentHistory](	  [BusinessEntityID] INT NOT NULL	, [DepartmentID] SMALLINT NOT NULL	, [ShiftID] TINYINT NOT NULL	, [StartDate] DATE NOT NULL	, [EndDate] DATE NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_EmployeeDepartmentHistory_BusinessEntityID_StartDate_DepartmentID] PRIMARY KEY ([BusinessEntityID] ASC, [DepartmentID] ASC, [ShiftID] ASC, [StartDate] ASC))ALTER TABLE [HumanResources].[EmployeeDepartmentHistory] WITH CHECK ADD CONSTRAINT [FK_EmployeeDepartmentHistory_Shift_ShiftID] FOREIGN KEY([ShiftID]) REFERENCES [HumanResources].[Shift] ([ShiftID])ALTER TABLE [HumanResources].[EmployeeDepartmentHistory] CHECK CONSTRAINT [FK_EmployeeDepartmentHistory_Shift_ShiftID]ALTER TABLE [HumanResources].[EmployeeDepartmentHistory] WITH CHECK ADD CONSTRAINT [FK_EmployeeDepartmentHistory_Department_DepartmentID] FOREIGN KEY([DepartmentID]) REFERENCES [HumanResources].[Department] ([DepartmentID])ALTER TABLE [HumanResources].[EmployeeDepartmentHistory] CHECK CONSTRAINT [FK_EmployeeDepartmentHistory_Department_DepartmentID]ALTER TABLE [HumanResources].[EmployeeDepartmentHistory] WITH CHECK ADD CONSTRAINT [FK_EmployeeDepartmentHistory_Employee_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [HumanResources].[Employee] ([BusinessEntityID])ALTER TABLE [HumanResources].[EmployeeDepartmentHistory] CHECK CONSTRAINT [FK_EmployeeDepartmentHistory_Employee_BusinessEntityID]CREATE NONCLUSTERED INDEX [IX_EmployeeDepartmentHistory_DepartmentID] ON [HumanResources].[EmployeeDepartmentHistory] ([DepartmentID] ASC)CREATE NONCLUSTERED INDEX [IX_EmployeeDepartmentHistory_ShiftID] ON [HumanResources].[EmployeeDepartmentHistory] ([ShiftID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[HumanResources].[EmployeePayHistory]')) DROP Table [HumanResources].[EmployeePayHistory]
GO
CREATE TABLE [HumanResources].[EmployeePayHistory](	  [BusinessEntityID] INT NOT NULL	, [RateChangeDate] DATETIME NOT NULL	, [Rate] MONEY NOT NULL	, [PayFrequency] TINYINT NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_EmployeePayHistory_BusinessEntityID_RateChangeDate] PRIMARY KEY ([BusinessEntityID] ASC, [RateChangeDate] ASC))ALTER TABLE [HumanResources].[EmployeePayHistory] WITH CHECK ADD CONSTRAINT [FK_EmployeePayHistory_Employee_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [HumanResources].[Employee] ([BusinessEntityID])ALTER TABLE [HumanResources].[EmployeePayHistory] CHECK CONSTRAINT [FK_EmployeePayHistory_Employee_BusinessEntityID]

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[HumanResources].[JobCandidate]')) DROP Table [HumanResources].[JobCandidate]
GO
CREATE TABLE [HumanResources].[JobCandidate](	  [JobCandidateID] INT NOT NULL IDENTITY(1,1)	, [BusinessEntityID] INT NULL	, [Resume] XML NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_JobCandidate_JobCandidateID] PRIMARY KEY ([JobCandidateID] ASC))ALTER TABLE [HumanResources].[JobCandidate] WITH CHECK ADD CONSTRAINT [FK_JobCandidate_Employee_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [HumanResources].[Employee] ([BusinessEntityID])ALTER TABLE [HumanResources].[JobCandidate] CHECK CONSTRAINT [FK_JobCandidate_Employee_BusinessEntityID]CREATE NONCLUSTERED INDEX [IX_JobCandidate_BusinessEntityID] ON [HumanResources].[JobCandidate] ([BusinessEntityID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[HumanResources].[Shift]')) DROP Table [HumanResources].[Shift]
GO
CREATE TABLE [HumanResources].[Shift](	  [ShiftID] TINYINT NOT NULL IDENTITY(1,1)	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [StartTime] TIME NOT NULL	, [EndTime] TIME NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_Shift_ShiftID] PRIMARY KEY ([ShiftID] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_Shift_Name] ON [HumanResources].[Shift] ([Name] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_Shift_StartTime_EndTime] ON [HumanResources].[Shift] ([StartTime] ASC, [EndTime] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Person].[Address]')) DROP Table [Person].[Address]
GO
CREATE TABLE [Person].[Address](	  [AddressID] INT NOT NULL IDENTITY(1,1)	, [AddressLine1] NVARCHAR(60) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [AddressLine2] NVARCHAR(60) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [City] NVARCHAR(30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [StateProvinceID] INT NOT NULL	, [PostalCode] NVARCHAR(15) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [SpatialLocation] GEOGRAPHY NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_Address_AddressID] PRIMARY KEY ([AddressID] ASC))ALTER TABLE [Person].[Address] WITH CHECK ADD CONSTRAINT [FK_Address_StateProvince_StateProvinceID] FOREIGN KEY([StateProvinceID]) REFERENCES [Person].[StateProvince] ([StateProvinceID])ALTER TABLE [Person].[Address] CHECK CONSTRAINT [FK_Address_StateProvince_StateProvinceID]CREATE UNIQUE NONCLUSTERED INDEX [AK_Address_rowguid] ON [Person].[Address] ([rowguid] ASC)CREATE UNIQUE NONCLUSTERED INDEX [IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode] ON [Person].[Address] ([AddressLine1] ASC, [AddressLine2] ASC, [City] ASC, [StateProvinceID] ASC, [PostalCode] ASC)CREATE NONCLUSTERED INDEX [IX_Address_StateProvinceID] ON [Person].[Address] ([StateProvinceID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Person].[AddressType]')) DROP Table [Person].[AddressType]
GO
CREATE TABLE [Person].[AddressType](	  [AddressTypeID] INT NOT NULL IDENTITY(1,1)	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_AddressType_AddressTypeID] PRIMARY KEY ([AddressTypeID] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_AddressType_rowguid] ON [Person].[AddressType] ([rowguid] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_AddressType_Name] ON [Person].[AddressType] ([Name] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Person].[BusinessEntity]')) DROP Table [Person].[BusinessEntity]
GO
CREATE TABLE [Person].[BusinessEntity](	  [BusinessEntityID] INT NOT NULL IDENTITY(1,1)	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_BusinessEntity_BusinessEntityID] PRIMARY KEY ([BusinessEntityID] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_BusinessEntity_rowguid] ON [Person].[BusinessEntity] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Person].[BusinessEntityAddress]')) DROP Table [Person].[BusinessEntityAddress]
GO
CREATE TABLE [Person].[BusinessEntityAddress](	  [BusinessEntityID] INT NOT NULL	, [AddressID] INT NOT NULL	, [AddressTypeID] INT NOT NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_BusinessEntityAddress_BusinessEntityID_AddressID_AddressTypeID] PRIMARY KEY ([BusinessEntityID] ASC, [AddressID] ASC, [AddressTypeID] ASC))ALTER TABLE [Person].[BusinessEntityAddress] WITH CHECK ADD CONSTRAINT [FK_BusinessEntityAddress_Address_AddressID] FOREIGN KEY([AddressID]) REFERENCES [Person].[Address] ([AddressID])ALTER TABLE [Person].[BusinessEntityAddress] CHECK CONSTRAINT [FK_BusinessEntityAddress_Address_AddressID]ALTER TABLE [Person].[BusinessEntityAddress] WITH CHECK ADD CONSTRAINT [FK_BusinessEntityAddress_AddressType_AddressTypeID] FOREIGN KEY([AddressTypeID]) REFERENCES [Person].[AddressType] ([AddressTypeID])ALTER TABLE [Person].[BusinessEntityAddress] CHECK CONSTRAINT [FK_BusinessEntityAddress_AddressType_AddressTypeID]ALTER TABLE [Person].[BusinessEntityAddress] WITH CHECK ADD CONSTRAINT [FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [Person].[BusinessEntity] ([BusinessEntityID])ALTER TABLE [Person].[BusinessEntityAddress] CHECK CONSTRAINT [FK_BusinessEntityAddress_BusinessEntity_BusinessEntityID]CREATE UNIQUE NONCLUSTERED INDEX [AK_BusinessEntityAddress_rowguid] ON [Person].[BusinessEntityAddress] ([rowguid] ASC)CREATE NONCLUSTERED INDEX [IX_BusinessEntityAddress_AddressID] ON [Person].[BusinessEntityAddress] ([AddressID] ASC)CREATE NONCLUSTERED INDEX [IX_BusinessEntityAddress_AddressTypeID] ON [Person].[BusinessEntityAddress] ([AddressTypeID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Person].[BusinessEntityContact]')) DROP Table [Person].[BusinessEntityContact]
GO
CREATE TABLE [Person].[BusinessEntityContact](	  [BusinessEntityID] INT NOT NULL	, [PersonID] INT NOT NULL	, [ContactTypeID] INT NOT NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_BusinessEntityContact_BusinessEntityID_PersonID_ContactTypeID] PRIMARY KEY ([BusinessEntityID] ASC, [PersonID] ASC, [ContactTypeID] ASC))ALTER TABLE [Person].[BusinessEntityContact] WITH CHECK ADD CONSTRAINT [FK_BusinessEntityContact_Person_PersonID] FOREIGN KEY([PersonID]) REFERENCES [Person].[Person] ([BusinessEntityID])ALTER TABLE [Person].[BusinessEntityContact] CHECK CONSTRAINT [FK_BusinessEntityContact_Person_PersonID]ALTER TABLE [Person].[BusinessEntityContact] WITH CHECK ADD CONSTRAINT [FK_BusinessEntityContact_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [Person].[BusinessEntity] ([BusinessEntityID])ALTER TABLE [Person].[BusinessEntityContact] CHECK CONSTRAINT [FK_BusinessEntityContact_BusinessEntity_BusinessEntityID]ALTER TABLE [Person].[BusinessEntityContact] WITH CHECK ADD CONSTRAINT [FK_BusinessEntityContact_ContactType_ContactTypeID] FOREIGN KEY([ContactTypeID]) REFERENCES [Person].[ContactType] ([ContactTypeID])ALTER TABLE [Person].[BusinessEntityContact] CHECK CONSTRAINT [FK_BusinessEntityContact_ContactType_ContactTypeID]CREATE UNIQUE NONCLUSTERED INDEX [AK_BusinessEntityContact_rowguid] ON [Person].[BusinessEntityContact] ([rowguid] ASC)CREATE NONCLUSTERED INDEX [IX_BusinessEntityContact_PersonID] ON [Person].[BusinessEntityContact] ([PersonID] ASC)CREATE NONCLUSTERED INDEX [IX_BusinessEntityContact_ContactTypeID] ON [Person].[BusinessEntityContact] ([ContactTypeID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Person].[ContactType]')) DROP Table [Person].[ContactType]
GO
CREATE TABLE [Person].[ContactType](	  [ContactTypeID] INT NOT NULL IDENTITY(1,1)	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ContactType_ContactTypeID] PRIMARY KEY ([ContactTypeID] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_ContactType_Name] ON [Person].[ContactType] ([Name] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Person].[CountryRegion]')) DROP Table [Person].[CountryRegion]
GO
CREATE TABLE [Person].[CountryRegion](	  [CountryRegionCode] NVARCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_CountryRegion_CountryRegionCode] PRIMARY KEY ([CountryRegionCode] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_CountryRegion_Name] ON [Person].[CountryRegion] ([Name] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Person].[CountryRegion1]')) DROP Table [Person].[CountryRegion1]
GO
CREATE TABLE [Person].[CountryRegion1](	  [CountryRegionCode] NVARCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ModifiedDate] DATETIME NOT NULL)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Person].[EmailAddress]')) DROP Table [Person].[EmailAddress]
GO
CREATE TABLE [Person].[EmailAddress](	  [BusinessEntityID] INT NOT NULL	, [EmailAddressID] INT NOT NULL IDENTITY(1,1)	, [EmailAddress] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_EmailAddress_BusinessEntityID_EmailAddressID] PRIMARY KEY ([BusinessEntityID] ASC, [EmailAddressID] ASC))ALTER TABLE [Person].[EmailAddress] WITH CHECK ADD CONSTRAINT [FK_EmailAddress_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [Person].[Person] ([BusinessEntityID])ALTER TABLE [Person].[EmailAddress] CHECK CONSTRAINT [FK_EmailAddress_Person_BusinessEntityID]CREATE NONCLUSTERED INDEX [IX_EmailAddress_EmailAddress] ON [Person].[EmailAddress] ([EmailAddress] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Person].[Password]')) DROP Table [Person].[Password]
GO
CREATE TABLE [Person].[Password](	  [BusinessEntityID] INT NOT NULL	, [PasswordHash] VARCHAR(128) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [PasswordSalt] VARCHAR(10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_Password_BusinessEntityID] PRIMARY KEY ([BusinessEntityID] ASC))ALTER TABLE [Person].[Password] WITH CHECK ADD CONSTRAINT [FK_Password_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [Person].[Person] ([BusinessEntityID])ALTER TABLE [Person].[Password] CHECK CONSTRAINT [FK_Password_Person_BusinessEntityID]

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Person].[Person]')) DROP Table [Person].[Person]
GO
CREATE TABLE [Person].[Person](	  [BusinessEntityID] INT NOT NULL	, [PersonType] NCHAR(2) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [NameStyle] NAMESTYLE NOT NULL DEFAULT((0))	, [Title] NVARCHAR(8) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [FirstName] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [MiddleName] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [LastName] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Suffix] NVARCHAR(10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [EmailPromotion] INT NOT NULL DEFAULT((0))	, [AdditionalContactInfo] XML NULL	, [Demographics] XML NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_Person_BusinessEntityID] PRIMARY KEY ([BusinessEntityID] ASC))ALTER TABLE [Person].[Person] WITH CHECK ADD CONSTRAINT [FK_Person_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [Person].[BusinessEntity] ([BusinessEntityID])ALTER TABLE [Person].[Person] CHECK CONSTRAINT [FK_Person_BusinessEntity_BusinessEntityID]CREATE NONCLUSTERED INDEX [IX_Person_LastName_FirstName_MiddleName] ON [Person].[Person] ([LastName] ASC, [FirstName] ASC, [MiddleName] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_Person_rowguid] ON [Person].[Person] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Person].[PersonPhone]')) DROP Table [Person].[PersonPhone]
GO
CREATE TABLE [Person].[PersonPhone](	  [BusinessEntityID] INT NOT NULL	, [PhoneNumber] PHONE COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [PhoneNumberTypeID] INT NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_PersonPhone_BusinessEntityID_PhoneNumber_PhoneNumberTypeID] PRIMARY KEY ([BusinessEntityID] ASC, [PhoneNumber] ASC, [PhoneNumberTypeID] ASC))ALTER TABLE [Person].[PersonPhone] WITH CHECK ADD CONSTRAINT [FK_PersonPhone_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [Person].[Person] ([BusinessEntityID])ALTER TABLE [Person].[PersonPhone] CHECK CONSTRAINT [FK_PersonPhone_Person_BusinessEntityID]ALTER TABLE [Person].[PersonPhone] WITH CHECK ADD CONSTRAINT [FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID] FOREIGN KEY([PhoneNumberTypeID]) REFERENCES [Person].[PhoneNumberType] ([PhoneNumberTypeID])ALTER TABLE [Person].[PersonPhone] CHECK CONSTRAINT [FK_PersonPhone_PhoneNumberType_PhoneNumberTypeID]CREATE NONCLUSTERED INDEX [IX_PersonPhone_PhoneNumber] ON [Person].[PersonPhone] ([PhoneNumber] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Person].[PhoneNumberType]')) DROP Table [Person].[PhoneNumberType]
GO
CREATE TABLE [Person].[PhoneNumberType](	  [PhoneNumberTypeID] INT NOT NULL IDENTITY(1,1)	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_PhoneNumberType_PhoneNumberTypeID] PRIMARY KEY ([PhoneNumberTypeID] ASC))

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Person].[StateProvince]')) DROP Table [Person].[StateProvince]
GO
CREATE TABLE [Person].[StateProvince](	  [StateProvinceID] INT NOT NULL IDENTITY(1,1)	, [StateProvinceCode] NCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [CountryRegionCode] NVARCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [IsOnlyStateProvinceFlag] FLAG NOT NULL DEFAULT((1))	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [TerritoryID] INT NOT NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_StateProvince_StateProvinceID] PRIMARY KEY ([StateProvinceID] ASC))ALTER TABLE [Person].[StateProvince] WITH CHECK ADD CONSTRAINT [FK_StateProvince_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID]) REFERENCES [Sales].[SalesTerritory] ([TerritoryID])ALTER TABLE [Person].[StateProvince] CHECK CONSTRAINT [FK_StateProvince_SalesTerritory_TerritoryID]ALTER TABLE [Person].[StateProvince] WITH CHECK ADD CONSTRAINT [FK_StateProvince_CountryRegion_CountryRegionCode] FOREIGN KEY([CountryRegionCode]) REFERENCES [Person].[CountryRegion] ([CountryRegionCode])ALTER TABLE [Person].[StateProvince] CHECK CONSTRAINT [FK_StateProvince_CountryRegion_CountryRegionCode]CREATE UNIQUE NONCLUSTERED INDEX [AK_StateProvince_Name] ON [Person].[StateProvince] ([Name] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_StateProvince_StateProvinceCode_CountryRegionCode] ON [Person].[StateProvince] ([StateProvinceCode] ASC, [CountryRegionCode] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_StateProvince_rowguid] ON [Person].[StateProvince] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[BillOfMaterials]')) DROP Table [Production].[BillOfMaterials]
GO
CREATE TABLE [Production].[BillOfMaterials](	  [BillOfMaterialsID] INT NOT NULL IDENTITY(1,1)	, [ProductAssemblyID] INT NULL	, [ComponentID] INT NOT NULL	, [StartDate] DATETIME NOT NULL DEFAULT(getdate())	, [EndDate] DATETIME NULL	, [UnitMeasureCode] NCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [BOMLevel] SMALLINT NOT NULL	, [PerAssemblyQty] DECIMAL(8,2) NOT NULL DEFAULT((1.00))	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_BillOfMaterials_BillOfMaterialsID] PRIMARY KEY ([BillOfMaterialsID] ASC))ALTER TABLE [Production].[BillOfMaterials] WITH CHECK ADD CONSTRAINT [FK_BillOfMaterials_Product_ProductAssemblyID] FOREIGN KEY([ProductAssemblyID]) REFERENCES [Production].[Product] ([ProductID])ALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [FK_BillOfMaterials_Product_ProductAssemblyID]ALTER TABLE [Production].[BillOfMaterials] WITH CHECK ADD CONSTRAINT [FK_BillOfMaterials_Product_ComponentID] FOREIGN KEY([ComponentID]) REFERENCES [Production].[Product] ([ProductID])ALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [FK_BillOfMaterials_Product_ComponentID]ALTER TABLE [Production].[BillOfMaterials] WITH CHECK ADD CONSTRAINT [FK_BillOfMaterials_UnitMeasure_UnitMeasureCode] FOREIGN KEY([UnitMeasureCode]) REFERENCES [Production].[UnitMeasure] ([UnitMeasureCode])ALTER TABLE [Production].[BillOfMaterials] CHECK CONSTRAINT [FK_BillOfMaterials_UnitMeasure_UnitMeasureCode]CREATE NONCLUSTERED INDEX [IX_BillOfMaterials_UnitMeasureCode] ON [Production].[BillOfMaterials] ([UnitMeasureCode] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[Culture]')) DROP Table [Production].[Culture]
GO
CREATE TABLE [Production].[Culture](	  [CultureID] NCHAR(6) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_Culture_CultureID] PRIMARY KEY ([CultureID] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_Culture_Name] ON [Production].[Culture] ([Name] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[Document]')) DROP Table [Production].[Document]
GO
CREATE TABLE [Production].[Document](	  [DocumentNode] HIERARCHYID NOT NULL	, [DocumentLevel] AS ([DocumentNode].[GetLevel]())	, [Title] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Owner] INT NOT NULL	, [FolderFlag] BIT NOT NULL DEFAULT((0))	, [FileName] NVARCHAR(400) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [FileExtension] NVARCHAR(8) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Revision] NCHAR(5) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ChangeNumber] INT NOT NULL DEFAULT((0))	, [Status] TINYINT NOT NULL	, [DocumentSummary] NVARCHAR(MAX) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [Document] VARBINARY(MAX) NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_Document_DocumentNode] PRIMARY KEY ([DocumentNode] ASC))ALTER TABLE [Production].[Document] WITH CHECK ADD CONSTRAINT [FK_Document_Employee_Owner] FOREIGN KEY([Owner]) REFERENCES [HumanResources].[Employee] ([BusinessEntityID])ALTER TABLE [Production].[Document] CHECK CONSTRAINT [FK_Document_Employee_Owner]CREATE UNIQUE NONCLUSTERED INDEX [UQ__Document__F73921F7C5112C2E] ON [Production].[Document] ([rowguid] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_Document_DocumentLevel_DocumentNode] ON [Production].[Document] ([DocumentLevel] ASC, [DocumentNode] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_Document_rowguid] ON [Production].[Document] ([rowguid] ASC)CREATE NONCLUSTERED INDEX [IX_Document_FileName_Revision] ON [Production].[Document] ([FileName] ASC, [Revision] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[Illustration]')) DROP Table [Production].[Illustration]
GO
CREATE TABLE [Production].[Illustration](	  [IllustrationID] INT NOT NULL IDENTITY(1,1)	, [Diagram] XML NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_Illustration_IllustrationID] PRIMARY KEY ([IllustrationID] ASC))

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[Location]')) DROP Table [Production].[Location]
GO
CREATE TABLE [Production].[Location](	  [LocationID] SMALLINT NOT NULL IDENTITY(1,1)	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [CostRate] SMALLMONEY NOT NULL DEFAULT((0.00))	, [Availability] DECIMAL(8,2) NOT NULL DEFAULT((0.00))	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_Location_LocationID] PRIMARY KEY ([LocationID] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_Location_Name] ON [Production].[Location] ([Name] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[Product]')) DROP Table [Production].[Product]
GO
CREATE TABLE [Production].[Product](	  [ProductID] INT NOT NULL IDENTITY(1,1)	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ProductNumber] NVARCHAR(25) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [MakeFlag] FLAG NOT NULL DEFAULT((1))	, [FinishedGoodsFlag] FLAG NOT NULL DEFAULT((1))	, [Color] NVARCHAR(15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [SafetyStockLevel] SMALLINT NOT NULL	, [ReorderPoint] SMALLINT NOT NULL	, [StandardCost] MONEY NOT NULL	, [ListPrice] MONEY NOT NULL	, [Size] NVARCHAR(5) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [SizeUnitMeasureCode] NCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [WeightUnitMeasureCode] NCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [Weight] DECIMAL(8,2) NULL	, [DaysToManufacture] INT NOT NULL	, [ProductLine] NCHAR(2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [Class] NCHAR(2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [Style] NCHAR(2) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [ProductSubcategoryID] INT NULL	, [ProductModelID] INT NULL	, [SellStartDate] DATETIME NOT NULL	, [SellEndDate] DATETIME NULL	, [DiscontinuedDate] DATETIME NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_Product_ProductID] PRIMARY KEY ([ProductID] ASC))ALTER TABLE [Production].[Product] WITH CHECK ADD CONSTRAINT [FK_Product_ProductModel_ProductModelID] FOREIGN KEY([ProductModelID]) REFERENCES [Production].[ProductModel] ([ProductModelID])ALTER TABLE [Production].[Product] CHECK CONSTRAINT [FK_Product_ProductModel_ProductModelID]ALTER TABLE [Production].[Product] WITH CHECK ADD CONSTRAINT [FK_Product_ProductSubcategory_ProductSubcategoryID] FOREIGN KEY([ProductSubcategoryID]) REFERENCES [Production].[ProductSubcategory] ([ProductSubcategoryID])ALTER TABLE [Production].[Product] CHECK CONSTRAINT [FK_Product_ProductSubcategory_ProductSubcategoryID]ALTER TABLE [Production].[Product] WITH CHECK ADD CONSTRAINT [FK_Product_UnitMeasure_SizeUnitMeasureCode] FOREIGN KEY([SizeUnitMeasureCode]) REFERENCES [Production].[UnitMeasure] ([UnitMeasureCode])ALTER TABLE [Production].[Product] CHECK CONSTRAINT [FK_Product_UnitMeasure_SizeUnitMeasureCode]ALTER TABLE [Production].[Product] WITH CHECK ADD CONSTRAINT [FK_Product_UnitMeasure_WeightUnitMeasureCode] FOREIGN KEY([WeightUnitMeasureCode]) REFERENCES [Production].[UnitMeasure] ([UnitMeasureCode])ALTER TABLE [Production].[Product] CHECK CONSTRAINT [FK_Product_UnitMeasure_WeightUnitMeasureCode]CREATE UNIQUE NONCLUSTERED INDEX [AK_Product_ProductNumber] ON [Production].[Product] ([ProductNumber] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_Product_Name] ON [Production].[Product] ([Name] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_Product_rowguid] ON [Production].[Product] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[ProductCategory]')) DROP Table [Production].[ProductCategory]
GO
CREATE TABLE [Production].[ProductCategory](	  [ProductCategoryID] INT NOT NULL IDENTITY(1,1)	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ProductCategory_ProductCategoryID] PRIMARY KEY ([ProductCategoryID] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductCategory_Name] ON [Production].[ProductCategory] ([Name] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductCategory_rowguid] ON [Production].[ProductCategory] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[ProductCostHistory]')) DROP Table [Production].[ProductCostHistory]
GO
CREATE TABLE [Production].[ProductCostHistory](	  [ProductID] INT NOT NULL	, [StartDate] DATETIME NOT NULL	, [EndDate] DATETIME NULL	, [StandardCost] MONEY NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ProductCostHistory_ProductID_StartDate] PRIMARY KEY ([ProductID] ASC, [StartDate] ASC))ALTER TABLE [Production].[ProductCostHistory] WITH CHECK ADD CONSTRAINT [FK_ProductCostHistory_Product_ProductID] FOREIGN KEY([ProductID]) REFERENCES [Production].[Product] ([ProductID])ALTER TABLE [Production].[ProductCostHistory] CHECK CONSTRAINT [FK_ProductCostHistory_Product_ProductID]

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[ProductDescription]')) DROP Table [Production].[ProductDescription]
GO
CREATE TABLE [Production].[ProductDescription](	  [ProductDescriptionID] INT NOT NULL IDENTITY(1,1)	, [Description] NVARCHAR(400) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ProductDescription_ProductDescriptionID] PRIMARY KEY ([ProductDescriptionID] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductDescription_rowguid] ON [Production].[ProductDescription] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[ProductDocument]')) DROP Table [Production].[ProductDocument]
GO
CREATE TABLE [Production].[ProductDocument](	  [ProductID] INT NOT NULL	, [DocumentNode] HIERARCHYID NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ProductDocument_ProductID_DocumentNode] PRIMARY KEY ([ProductID] ASC, [DocumentNode] ASC))ALTER TABLE [Production].[ProductDocument] WITH CHECK ADD CONSTRAINT [FK_ProductDocument_Product_ProductID] FOREIGN KEY([ProductID]) REFERENCES [Production].[Product] ([ProductID])ALTER TABLE [Production].[ProductDocument] CHECK CONSTRAINT [FK_ProductDocument_Product_ProductID]ALTER TABLE [Production].[ProductDocument] WITH CHECK ADD CONSTRAINT [FK_ProductDocument_Document_DocumentNode] FOREIGN KEY([DocumentNode]) REFERENCES [Production].[Document] ([DocumentNode])ALTER TABLE [Production].[ProductDocument] CHECK CONSTRAINT [FK_ProductDocument_Document_DocumentNode]

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[ProductInventory]')) DROP Table [Production].[ProductInventory]
GO
CREATE TABLE [Production].[ProductInventory](	  [ProductID] INT NOT NULL	, [LocationID] SMALLINT NOT NULL	, [Shelf] NVARCHAR(10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Bin] TINYINT NOT NULL	, [Quantity] SMALLINT NOT NULL DEFAULT((0))	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ProductInventory_ProductID_LocationID] PRIMARY KEY ([ProductID] ASC, [LocationID] ASC))ALTER TABLE [Production].[ProductInventory] WITH CHECK ADD CONSTRAINT [FK_ProductInventory_Location_LocationID] FOREIGN KEY([LocationID]) REFERENCES [Production].[Location] ([LocationID])ALTER TABLE [Production].[ProductInventory] CHECK CONSTRAINT [FK_ProductInventory_Location_LocationID]ALTER TABLE [Production].[ProductInventory] WITH CHECK ADD CONSTRAINT [FK_ProductInventory_Product_ProductID] FOREIGN KEY([ProductID]) REFERENCES [Production].[Product] ([ProductID])ALTER TABLE [Production].[ProductInventory] CHECK CONSTRAINT [FK_ProductInventory_Product_ProductID]

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[ProductListPriceHistory]')) DROP Table [Production].[ProductListPriceHistory]
GO
CREATE TABLE [Production].[ProductListPriceHistory](	  [ProductID] INT NOT NULL	, [StartDate] DATETIME NOT NULL	, [EndDate] DATETIME NULL	, [ListPrice] MONEY NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ProductListPriceHistory_ProductID_StartDate] PRIMARY KEY ([ProductID] ASC, [StartDate] ASC))ALTER TABLE [Production].[ProductListPriceHistory] WITH CHECK ADD CONSTRAINT [FK_ProductListPriceHistory_Product_ProductID] FOREIGN KEY([ProductID]) REFERENCES [Production].[Product] ([ProductID])ALTER TABLE [Production].[ProductListPriceHistory] CHECK CONSTRAINT [FK_ProductListPriceHistory_Product_ProductID]

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[ProductModel]')) DROP Table [Production].[ProductModel]
GO
CREATE TABLE [Production].[ProductModel](	  [ProductModelID] INT NOT NULL IDENTITY(1,1)	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [CatalogDescription] XML NULL	, [Instructions] XML NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ProductModel_ProductModelID] PRIMARY KEY ([ProductModelID] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_Name] ON [Production].[ProductModel] ([Name] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_rowguid] ON [Production].[ProductModel] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[ProductModelIllustration]')) DROP Table [Production].[ProductModelIllustration]
GO
CREATE TABLE [Production].[ProductModelIllustration](	  [ProductModelID] INT NOT NULL	, [IllustrationID] INT NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ProductModelIllustration_ProductModelID_IllustrationID] PRIMARY KEY ([ProductModelID] ASC, [IllustrationID] ASC))ALTER TABLE [Production].[ProductModelIllustration] WITH CHECK ADD CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID] FOREIGN KEY([IllustrationID]) REFERENCES [Production].[Illustration] ([IllustrationID])ALTER TABLE [Production].[ProductModelIllustration] CHECK CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID]ALTER TABLE [Production].[ProductModelIllustration] WITH CHECK ADD CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID] FOREIGN KEY([ProductModelID]) REFERENCES [Production].[ProductModel] ([ProductModelID])ALTER TABLE [Production].[ProductModelIllustration] CHECK CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID]

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[ProductModelProductDescriptionCulture]')) DROP Table [Production].[ProductModelProductDescriptionCulture]
GO
CREATE TABLE [Production].[ProductModelProductDescriptionCulture](	  [ProductModelID] INT NOT NULL	, [ProductDescriptionID] INT NOT NULL	, [CultureID] NCHAR(6) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID] PRIMARY KEY ([ProductModelID] ASC, [ProductDescriptionID] ASC, [CultureID] ASC))ALTER TABLE [Production].[ProductModelProductDescriptionCulture] WITH CHECK ADD CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID] FOREIGN KEY([ProductDescriptionID]) REFERENCES [Production].[ProductDescription] ([ProductDescriptionID])ALTER TABLE [Production].[ProductModelProductDescriptionCulture] CHECK CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID]ALTER TABLE [Production].[ProductModelProductDescriptionCulture] WITH CHECK ADD CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID] FOREIGN KEY([ProductModelID]) REFERENCES [Production].[ProductModel] ([ProductModelID])ALTER TABLE [Production].[ProductModelProductDescriptionCulture] CHECK CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID]ALTER TABLE [Production].[ProductModelProductDescriptionCulture] WITH CHECK ADD CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID] FOREIGN KEY([CultureID]) REFERENCES [Production].[Culture] ([CultureID])ALTER TABLE [Production].[ProductModelProductDescriptionCulture] CHECK CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID]

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[ProductPhoto]')) DROP Table [Production].[ProductPhoto]
GO
CREATE TABLE [Production].[ProductPhoto](	  [ProductPhotoID] INT NOT NULL IDENTITY(1,1)	, [ThumbNailPhoto] VARBINARY(MAX) NULL	, [ThumbnailPhotoFileName] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [LargePhoto] VARBINARY(MAX) NULL	, [LargePhotoFileName] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ProductPhoto_ProductPhotoID] PRIMARY KEY ([ProductPhotoID] ASC))

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[ProductProductPhoto]')) DROP Table [Production].[ProductProductPhoto]
GO
CREATE TABLE [Production].[ProductProductPhoto](	  [ProductID] INT NOT NULL	, [ProductPhotoID] INT NOT NULL	, [Primary] FLAG NOT NULL DEFAULT((0))	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ProductProductPhoto_ProductID_ProductPhotoID] PRIMARY KEY ([ProductID] ASC, [ProductPhotoID] ASC))ALTER TABLE [Production].[ProductProductPhoto] WITH CHECK ADD CONSTRAINT [FK_ProductProductPhoto_Product_ProductID] FOREIGN KEY([ProductID]) REFERENCES [Production].[Product] ([ProductID])ALTER TABLE [Production].[ProductProductPhoto] CHECK CONSTRAINT [FK_ProductProductPhoto_Product_ProductID]ALTER TABLE [Production].[ProductProductPhoto] WITH CHECK ADD CONSTRAINT [FK_ProductProductPhoto_ProductPhoto_ProductPhotoID] FOREIGN KEY([ProductPhotoID]) REFERENCES [Production].[ProductPhoto] ([ProductPhotoID])ALTER TABLE [Production].[ProductProductPhoto] CHECK CONSTRAINT [FK_ProductProductPhoto_ProductPhoto_ProductPhotoID]

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[ProductReview]')) DROP Table [Production].[ProductReview]
GO
CREATE TABLE [Production].[ProductReview](	  [ProductReviewID] INT NOT NULL IDENTITY(1,1)	, [ProductID] INT NOT NULL	, [ReviewerName] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ReviewDate] DATETIME NOT NULL DEFAULT(getdate())	, [EmailAddress] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Rating] INT NOT NULL	, [Comments] NVARCHAR(3850) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ProductReview_ProductReviewID] PRIMARY KEY ([ProductReviewID] ASC))ALTER TABLE [Production].[ProductReview] WITH CHECK ADD CONSTRAINT [FK_ProductReview_Product_ProductID] FOREIGN KEY([ProductID]) REFERENCES [Production].[Product] ([ProductID])ALTER TABLE [Production].[ProductReview] CHECK CONSTRAINT [FK_ProductReview_Product_ProductID]CREATE NONCLUSTERED INDEX [IX_ProductReview_ProductID_Name] ON [Production].[ProductReview] ([ProductID] ASC, [ReviewerName] ASC)INCLUDE ([Comments])

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[ProductSubcategory]')) DROP Table [Production].[ProductSubcategory]
GO
CREATE TABLE [Production].[ProductSubcategory](	  [ProductSubcategoryID] INT NOT NULL IDENTITY(1,1)	, [ProductCategoryID] INT NOT NULL	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ProductSubcategory_ProductSubcategoryID] PRIMARY KEY ([ProductSubcategoryID] ASC))ALTER TABLE [Production].[ProductSubcategory] WITH CHECK ADD CONSTRAINT [FK_ProductSubcategory_ProductCategory_ProductCategoryID] FOREIGN KEY([ProductCategoryID]) REFERENCES [Production].[ProductCategory] ([ProductCategoryID])ALTER TABLE [Production].[ProductSubcategory] CHECK CONSTRAINT [FK_ProductSubcategory_ProductCategory_ProductCategoryID]CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductSubcategory_Name] ON [Production].[ProductSubcategory] ([Name] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductSubcategory_rowguid] ON [Production].[ProductSubcategory] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[ScrapReason]')) DROP Table [Production].[ScrapReason]
GO
CREATE TABLE [Production].[ScrapReason](	  [ScrapReasonID] SMALLINT NOT NULL IDENTITY(1,1)	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ScrapReason_ScrapReasonID] PRIMARY KEY ([ScrapReasonID] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_ScrapReason_Name] ON [Production].[ScrapReason] ([Name] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[TransactionHistory]')) DROP Table [Production].[TransactionHistory]
GO
CREATE TABLE [Production].[TransactionHistory](	  [TransactionID] INT NOT NULL IDENTITY(*,1)	, [ProductID] INT NOT NULL	, [ReferenceOrderID] INT NOT NULL	, [ReferenceOrderLineID] INT NOT NULL DEFAULT((0))	, [TransactionDate] DATETIME NOT NULL DEFAULT(getdate())	, [TransactionType] NCHAR(1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Quantity] INT NOT NULL	, [ActualCost] MONEY NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_TransactionHistory_TransactionID] PRIMARY KEY ([TransactionID] ASC))ALTER TABLE [Production].[TransactionHistory] WITH CHECK ADD CONSTRAINT [FK_TransactionHistory_Product_ProductID] FOREIGN KEY([ProductID]) REFERENCES [Production].[Product] ([ProductID])ALTER TABLE [Production].[TransactionHistory] CHECK CONSTRAINT [FK_TransactionHistory_Product_ProductID]CREATE NONCLUSTERED INDEX [IX_TransactionHistory_ProductID] ON [Production].[TransactionHistory] ([ProductID] ASC)CREATE NONCLUSTERED INDEX [IX_TransactionHistory_ReferenceOrderID_ReferenceOrderLineID] ON [Production].[TransactionHistory] ([ReferenceOrderID] ASC, [ReferenceOrderLineID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[TransactionHistoryArchive]')) DROP Table [Production].[TransactionHistoryArchive]
GO
CREATE TABLE [Production].[TransactionHistoryArchive](	  [TransactionID] INT NOT NULL	, [ProductID] INT NOT NULL	, [ReferenceOrderID] INT NOT NULL	, [ReferenceOrderLineID] INT NOT NULL DEFAULT((0))	, [TransactionDate] DATETIME NOT NULL DEFAULT(getdate())	, [TransactionType] NCHAR(1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Quantity] INT NOT NULL	, [ActualCost] MONEY NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_TransactionHistoryArchive_TransactionID] PRIMARY KEY ([TransactionID] ASC))CREATE NONCLUSTERED INDEX [IX_TransactionHistoryArchive_ProductID] ON [Production].[TransactionHistoryArchive] ([ProductID] ASC)CREATE NONCLUSTERED INDEX [IX_TransactionHistoryArchive_ReferenceOrderID_ReferenceOrderLineID] ON [Production].[TransactionHistoryArchive] ([ReferenceOrderID] ASC, [ReferenceOrderLineID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[UnitMeasure]')) DROP Table [Production].[UnitMeasure]
GO
CREATE TABLE [Production].[UnitMeasure](	  [UnitMeasureCode] NCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_UnitMeasure_UnitMeasureCode] PRIMARY KEY ([UnitMeasureCode] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_UnitMeasure_Name] ON [Production].[UnitMeasure] ([Name] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[WorkOrder]')) DROP Table [Production].[WorkOrder]
GO
CREATE TABLE [Production].[WorkOrder](	  [WorkOrderID] INT NOT NULL IDENTITY(1,1)	, [ProductID] INT NOT NULL	, [OrderQty] INT NOT NULL	, [StockedQty] AS (isnull([OrderQty]-[ScrappedQty],(0)))	, [ScrappedQty] SMALLINT NOT NULL	, [StartDate] DATETIME NOT NULL	, [EndDate] DATETIME NULL	, [DueDate] DATETIME NOT NULL	, [ScrapReasonID] SMALLINT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_WorkOrder_WorkOrderID] PRIMARY KEY ([WorkOrderID] ASC))ALTER TABLE [Production].[WorkOrder] WITH CHECK ADD CONSTRAINT [FK_WorkOrder_Product_ProductID] FOREIGN KEY([ProductID]) REFERENCES [Production].[Product] ([ProductID])ALTER TABLE [Production].[WorkOrder] CHECK CONSTRAINT [FK_WorkOrder_Product_ProductID]ALTER TABLE [Production].[WorkOrder] WITH CHECK ADD CONSTRAINT [FK_WorkOrder_ScrapReason_ScrapReasonID] FOREIGN KEY([ScrapReasonID]) REFERENCES [Production].[ScrapReason] ([ScrapReasonID])ALTER TABLE [Production].[WorkOrder] CHECK CONSTRAINT [FK_WorkOrder_ScrapReason_ScrapReasonID]CREATE NONCLUSTERED INDEX [IX_WorkOrder_ScrapReasonID] ON [Production].[WorkOrder] ([ScrapReasonID] ASC)CREATE NONCLUSTERED INDEX [IX_WorkOrder_ProductID] ON [Production].[WorkOrder] ([ProductID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Production].[WorkOrderRouting]')) DROP Table [Production].[WorkOrderRouting]
GO
CREATE TABLE [Production].[WorkOrderRouting](	  [WorkOrderID] INT NOT NULL	, [ProductID] INT NOT NULL	, [OperationSequence] SMALLINT NOT NULL	, [LocationID] SMALLINT NOT NULL	, [ScheduledStartDate] DATETIME NOT NULL	, [ScheduledEndDate] DATETIME NOT NULL	, [ActualStartDate] DATETIME NULL	, [ActualEndDate] DATETIME NULL	, [ActualResourceHrs] DECIMAL(9,4) NULL	, [PlannedCost] MONEY NOT NULL	, [ActualCost] MONEY NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_WorkOrderRouting_WorkOrderID_ProductID_OperationSequence] PRIMARY KEY ([WorkOrderID] ASC, [ProductID] ASC, [OperationSequence] ASC))ALTER TABLE [Production].[WorkOrderRouting] WITH CHECK ADD CONSTRAINT [FK_WorkOrderRouting_Location_LocationID] FOREIGN KEY([LocationID]) REFERENCES [Production].[Location] ([LocationID])ALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [FK_WorkOrderRouting_Location_LocationID]ALTER TABLE [Production].[WorkOrderRouting] WITH CHECK ADD CONSTRAINT [FK_WorkOrderRouting_WorkOrder_WorkOrderID] FOREIGN KEY([WorkOrderID]) REFERENCES [Production].[WorkOrder] ([WorkOrderID])ALTER TABLE [Production].[WorkOrderRouting] CHECK CONSTRAINT [FK_WorkOrderRouting_WorkOrder_WorkOrderID]CREATE NONCLUSTERED INDEX [IX_WorkOrderRouting_ProductID] ON [Production].[WorkOrderRouting] ([ProductID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Purchasing].[ProductVendor]')) DROP Table [Purchasing].[ProductVendor]
GO
CREATE TABLE [Purchasing].[ProductVendor](	  [ProductID] INT NOT NULL	, [BusinessEntityID] INT NOT NULL	, [AverageLeadTime] INT NOT NULL	, [StandardPrice] MONEY NOT NULL	, [LastReceiptCost] MONEY NULL	, [LastReceiptDate] DATETIME NULL	, [MinOrderQty] INT NOT NULL	, [MaxOrderQty] INT NOT NULL	, [OnOrderQty] INT NULL	, [UnitMeasureCode] NCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ProductVendor_ProductID_BusinessEntityID] PRIMARY KEY ([ProductID] ASC, [BusinessEntityID] ASC))ALTER TABLE [Purchasing].[ProductVendor] WITH CHECK ADD CONSTRAINT [FK_ProductVendor_Product_ProductID] FOREIGN KEY([ProductID]) REFERENCES [Production].[Product] ([ProductID])ALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [FK_ProductVendor_Product_ProductID]ALTER TABLE [Purchasing].[ProductVendor] WITH CHECK ADD CONSTRAINT [FK_ProductVendor_UnitMeasure_UnitMeasureCode] FOREIGN KEY([UnitMeasureCode]) REFERENCES [Production].[UnitMeasure] ([UnitMeasureCode])ALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [FK_ProductVendor_UnitMeasure_UnitMeasureCode]ALTER TABLE [Purchasing].[ProductVendor] WITH CHECK ADD CONSTRAINT [FK_ProductVendor_Vendor_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [Purchasing].[Vendor] ([BusinessEntityID])ALTER TABLE [Purchasing].[ProductVendor] CHECK CONSTRAINT [FK_ProductVendor_Vendor_BusinessEntityID]CREATE NONCLUSTERED INDEX [IX_ProductVendor_UnitMeasureCode] ON [Purchasing].[ProductVendor] ([UnitMeasureCode] ASC)CREATE NONCLUSTERED INDEX [IX_ProductVendor_BusinessEntityID] ON [Purchasing].[ProductVendor] ([BusinessEntityID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Purchasing].[PurchaseOrderDetail]')) DROP Table [Purchasing].[PurchaseOrderDetail]
GO
CREATE TABLE [Purchasing].[PurchaseOrderDetail](	  [PurchaseOrderID] INT NOT NULL	, [PurchaseOrderDetailID] INT NOT NULL IDENTITY(1,1)	, [DueDate] DATETIME NOT NULL	, [OrderQty] SMALLINT NOT NULL	, [ProductID] INT NOT NULL	, [UnitPrice] MONEY NOT NULL	, [LineTotal] AS (isnull([OrderQty]*[UnitPrice],(0.00)))	, [ReceivedQty] DECIMAL(8,2) NOT NULL	, [RejectedQty] DECIMAL(8,2) NOT NULL	, [StockedQty] AS (isnull([ReceivedQty]-[RejectedQty],(0.00)))	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_PurchaseOrderDetail_PurchaseOrderID_PurchaseOrderDetailID] PRIMARY KEY ([PurchaseOrderID] ASC, [PurchaseOrderDetailID] ASC))ALTER TABLE [Purchasing].[PurchaseOrderDetail] WITH CHECK ADD CONSTRAINT [FK_PurchaseOrderDetail_Product_ProductID] FOREIGN KEY([ProductID]) REFERENCES [Production].[Product] ([ProductID])ALTER TABLE [Purchasing].[PurchaseOrderDetail] CHECK CONSTRAINT [FK_PurchaseOrderDetail_Product_ProductID]ALTER TABLE [Purchasing].[PurchaseOrderDetail] WITH CHECK ADD CONSTRAINT [FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID] FOREIGN KEY([PurchaseOrderID]) REFERENCES [Purchasing].[PurchaseOrderHeader] ([PurchaseOrderID])ALTER TABLE [Purchasing].[PurchaseOrderDetail] CHECK CONSTRAINT [FK_PurchaseOrderDetail_PurchaseOrderHeader_PurchaseOrderID]CREATE NONCLUSTERED INDEX [IX_PurchaseOrderDetail_ProductID] ON [Purchasing].[PurchaseOrderDetail] ([ProductID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Purchasing].[PurchaseOrderHeader]')) DROP Table [Purchasing].[PurchaseOrderHeader]
GO
CREATE TABLE [Purchasing].[PurchaseOrderHeader](	  [PurchaseOrderID] INT NOT NULL IDENTITY(1,1)	, [RevisionNumber] TINYINT NOT NULL DEFAULT((0))	, [Status] TINYINT NOT NULL DEFAULT((1))	, [EmployeeID] INT NOT NULL	, [VendorID] INT NOT NULL	, [ShipMethodID] INT NOT NULL	, [OrderDate] DATETIME NOT NULL DEFAULT(getdate())	, [ShipDate] DATETIME NULL	, [SubTotal] MONEY NOT NULL DEFAULT((0.00))	, [TaxAmt] MONEY NOT NULL DEFAULT((0.00))	, [Freight] MONEY NOT NULL DEFAULT((0.00))	, [TotalDue] AS (isnull(([SubTotal]+[TaxAmt])+[Freight],(0)))	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_PurchaseOrderHeader_PurchaseOrderID] PRIMARY KEY ([PurchaseOrderID] ASC))ALTER TABLE [Purchasing].[PurchaseOrderHeader] WITH CHECK ADD CONSTRAINT [FK_PurchaseOrderHeader_ShipMethod_ShipMethodID] FOREIGN KEY([ShipMethodID]) REFERENCES [Purchasing].[ShipMethod] ([ShipMethodID])ALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [FK_PurchaseOrderHeader_ShipMethod_ShipMethodID]ALTER TABLE [Purchasing].[PurchaseOrderHeader] WITH CHECK ADD CONSTRAINT [FK_PurchaseOrderHeader_Vendor_VendorID] FOREIGN KEY([VendorID]) REFERENCES [Purchasing].[Vendor] ([BusinessEntityID])ALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [FK_PurchaseOrderHeader_Vendor_VendorID]ALTER TABLE [Purchasing].[PurchaseOrderHeader] WITH CHECK ADD CONSTRAINT [FK_PurchaseOrderHeader_Employee_EmployeeID] FOREIGN KEY([EmployeeID]) REFERENCES [HumanResources].[Employee] ([BusinessEntityID])ALTER TABLE [Purchasing].[PurchaseOrderHeader] CHECK CONSTRAINT [FK_PurchaseOrderHeader_Employee_EmployeeID]CREATE NONCLUSTERED INDEX [IX_PurchaseOrderHeader_VendorID] ON [Purchasing].[PurchaseOrderHeader] ([VendorID] ASC)CREATE NONCLUSTERED INDEX [IX_PurchaseOrderHeader_EmployeeID] ON [Purchasing].[PurchaseOrderHeader] ([EmployeeID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Purchasing].[ShipMethod]')) DROP Table [Purchasing].[ShipMethod]
GO
CREATE TABLE [Purchasing].[ShipMethod](	  [ShipMethodID] INT NOT NULL IDENTITY(1,1)	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ShipBase] MONEY NOT NULL DEFAULT((0.00))	, [ShipRate] MONEY NOT NULL DEFAULT((0.00))	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ShipMethod_ShipMethodID] PRIMARY KEY ([ShipMethodID] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_ShipMethod_Name] ON [Purchasing].[ShipMethod] ([Name] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_ShipMethod_rowguid] ON [Purchasing].[ShipMethod] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Purchasing].[Vendor]')) DROP Table [Purchasing].[Vendor]
GO
CREATE TABLE [Purchasing].[Vendor](	  [BusinessEntityID] INT NOT NULL	, [AccountNumber] ACCOUNTNUMBER COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [CreditRating] TINYINT NOT NULL	, [PreferredVendorStatus] FLAG NOT NULL DEFAULT((1))	, [ActiveFlag] FLAG NOT NULL DEFAULT((1))	, [PurchasingWebServiceURL] NVARCHAR(1024) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_Vendor_BusinessEntityID] PRIMARY KEY ([BusinessEntityID] ASC))ALTER TABLE [Purchasing].[Vendor] WITH CHECK ADD CONSTRAINT [FK_Vendor_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [Person].[BusinessEntity] ([BusinessEntityID])ALTER TABLE [Purchasing].[Vendor] CHECK CONSTRAINT [FK_Vendor_BusinessEntity_BusinessEntityID]CREATE UNIQUE NONCLUSTERED INDEX [AK_Vendor_AccountNumber] ON [Purchasing].[Vendor] ([AccountNumber] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[CountryRegionCurrency]')) DROP Table [Sales].[CountryRegionCurrency]
GO
CREATE TABLE [Sales].[CountryRegionCurrency](	  [CountryRegionCode] NVARCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [CurrencyCode] NCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_CountryRegionCurrency_CountryRegionCode_CurrencyCode] PRIMARY KEY ([CountryRegionCode] ASC, [CurrencyCode] ASC))ALTER TABLE [Sales].[CountryRegionCurrency] WITH CHECK ADD CONSTRAINT [FK_CountryRegionCurrency_CountryRegion_CountryRegionCode] FOREIGN KEY([CountryRegionCode]) REFERENCES [Person].[CountryRegion] ([CountryRegionCode])ALTER TABLE [Sales].[CountryRegionCurrency] CHECK CONSTRAINT [FK_CountryRegionCurrency_CountryRegion_CountryRegionCode]ALTER TABLE [Sales].[CountryRegionCurrency] WITH CHECK ADD CONSTRAINT [FK_CountryRegionCurrency_Currency_CurrencyCode] FOREIGN KEY([CurrencyCode]) REFERENCES [Sales].[Currency] ([CurrencyCode])ALTER TABLE [Sales].[CountryRegionCurrency] CHECK CONSTRAINT [FK_CountryRegionCurrency_Currency_CurrencyCode]CREATE NONCLUSTERED INDEX [IX_CountryRegionCurrency_CurrencyCode] ON [Sales].[CountryRegionCurrency] ([CurrencyCode] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[CreditCard]')) DROP Table [Sales].[CreditCard]
GO
CREATE TABLE [Sales].[CreditCard](	  [CreditCardID] INT NOT NULL IDENTITY(1,1)	, [CardType] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [CardNumber] NVARCHAR(25) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ExpMonth] TINYINT NOT NULL	, [ExpYear] SMALLINT NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_CreditCard_CreditCardID] PRIMARY KEY ([CreditCardID] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_CreditCard_CardNumber] ON [Sales].[CreditCard] ([CardNumber] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[Currency]')) DROP Table [Sales].[Currency]
GO
CREATE TABLE [Sales].[Currency](	  [CurrencyCode] NCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_Currency_CurrencyCode] PRIMARY KEY ([CurrencyCode] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_Currency_Name] ON [Sales].[Currency] ([Name] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[CurrencyRate]')) DROP Table [Sales].[CurrencyRate]
GO
CREATE TABLE [Sales].[CurrencyRate](	  [CurrencyRateID] INT NOT NULL IDENTITY(1,1)	, [CurrencyRateDate] DATETIME NOT NULL	, [FromCurrencyCode] NCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ToCurrencyCode] NCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [AverageRate] MONEY NOT NULL	, [EndOfDayRate] MONEY NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_CurrencyRate_CurrencyRateID] PRIMARY KEY ([CurrencyRateID] ASC))ALTER TABLE [Sales].[CurrencyRate] WITH CHECK ADD CONSTRAINT [FK_CurrencyRate_Currency_FromCurrencyCode] FOREIGN KEY([FromCurrencyCode]) REFERENCES [Sales].[Currency] ([CurrencyCode])ALTER TABLE [Sales].[CurrencyRate] CHECK CONSTRAINT [FK_CurrencyRate_Currency_FromCurrencyCode]ALTER TABLE [Sales].[CurrencyRate] WITH CHECK ADD CONSTRAINT [FK_CurrencyRate_Currency_ToCurrencyCode] FOREIGN KEY([ToCurrencyCode]) REFERENCES [Sales].[Currency] ([CurrencyCode])ALTER TABLE [Sales].[CurrencyRate] CHECK CONSTRAINT [FK_CurrencyRate_Currency_ToCurrencyCode]CREATE UNIQUE NONCLUSTERED INDEX [AK_CurrencyRate_CurrencyRateDate_FromCurrencyCode_ToCurrencyCode] ON [Sales].[CurrencyRate] ([CurrencyRateDate] ASC, [FromCurrencyCode] ASC, [ToCurrencyCode] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[Customer]')) DROP Table [Sales].[Customer]
GO
CREATE TABLE [Sales].[Customer](	  [CustomerID] INT NOT NULL IDENTITY(1,1)	, [PersonID] INT NULL	, [StoreID] INT NULL	, [TerritoryID] INT NULL	, [AccountNumber] AS (isnull('AW'+[dbo].[ufnLeadingZeros]([CustomerID]),''))	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_Customer_CustomerID] PRIMARY KEY ([CustomerID] ASC))ALTER TABLE [Sales].[Customer] WITH CHECK ADD CONSTRAINT [FK_Customer_Person_PersonID] FOREIGN KEY([PersonID]) REFERENCES [Person].[Person] ([BusinessEntityID])ALTER TABLE [Sales].[Customer] CHECK CONSTRAINT [FK_Customer_Person_PersonID]ALTER TABLE [Sales].[Customer] WITH CHECK ADD CONSTRAINT [FK_Customer_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID]) REFERENCES [Sales].[SalesTerritory] ([TerritoryID])ALTER TABLE [Sales].[Customer] CHECK CONSTRAINT [FK_Customer_SalesTerritory_TerritoryID]ALTER TABLE [Sales].[Customer] WITH CHECK ADD CONSTRAINT [FK_Customer_Store_StoreID] FOREIGN KEY([StoreID]) REFERENCES [Sales].[Store] ([BusinessEntityID])ALTER TABLE [Sales].[Customer] CHECK CONSTRAINT [FK_Customer_Store_StoreID]CREATE UNIQUE NONCLUSTERED INDEX [AK_Customer_rowguid] ON [Sales].[Customer] ([rowguid] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_Customer_AccountNumber] ON [Sales].[Customer] ([AccountNumber] ASC)CREATE NONCLUSTERED INDEX [IX_Customer_TerritoryID] ON [Sales].[Customer] ([TerritoryID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[PersonCreditCard]')) DROP Table [Sales].[PersonCreditCard]
GO
CREATE TABLE [Sales].[PersonCreditCard](	  [BusinessEntityID] INT NOT NULL	, [CreditCardID] INT NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_PersonCreditCard_BusinessEntityID_CreditCardID] PRIMARY KEY ([BusinessEntityID] ASC, [CreditCardID] ASC))ALTER TABLE [Sales].[PersonCreditCard] WITH CHECK ADD CONSTRAINT [FK_PersonCreditCard_Person_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [Person].[Person] ([BusinessEntityID])ALTER TABLE [Sales].[PersonCreditCard] CHECK CONSTRAINT [FK_PersonCreditCard_Person_BusinessEntityID]ALTER TABLE [Sales].[PersonCreditCard] WITH CHECK ADD CONSTRAINT [FK_PersonCreditCard_CreditCard_CreditCardID] FOREIGN KEY([CreditCardID]) REFERENCES [Sales].[CreditCard] ([CreditCardID])ALTER TABLE [Sales].[PersonCreditCard] CHECK CONSTRAINT [FK_PersonCreditCard_CreditCard_CreditCardID]

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[SalesOrderDetail]')) DROP Table [Sales].[SalesOrderDetail]
GO
CREATE TABLE [Sales].[SalesOrderDetail](	  [SalesOrderID] INT NOT NULL	, [SalesOrderDetailID] INT NOT NULL IDENTITY(1,1)	, [CarrierTrackingNumber] NVARCHAR(25) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [OrderQty] SMALLINT NOT NULL	, [ProductID] INT NOT NULL	, [SpecialOfferID] INT NOT NULL	, [UnitPrice] MONEY NOT NULL	, [UnitPriceDiscount] MONEY NOT NULL DEFAULT((0.0))	, [LineTotal] AS (isnull(([UnitPrice]*((1.0)-[UnitPriceDiscount]))*[OrderQty],(0.0)))	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_SalesOrderDetail_SalesOrderID_SalesOrderDetailID] PRIMARY KEY ([SalesOrderID] ASC, [SalesOrderDetailID] ASC))ALTER TABLE [Sales].[SalesOrderDetail] WITH CHECK ADD CONSTRAINT [FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID] FOREIGN KEY([ProductID], [SpecialOfferID]) REFERENCES [Sales].[SpecialOfferProduct] ([ProductID], [SpecialOfferID])ALTER TABLE [Sales].[SalesOrderDetail] CHECK CONSTRAINT [FK_SalesOrderDetail_SpecialOfferProduct_SpecialOfferIDProductID]ALTER TABLE [Sales].[SalesOrderDetail] WITH CHECK ADD CONSTRAINT [FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID] FOREIGN KEY([SalesOrderID]) REFERENCES [Sales].[SalesOrderHeader] ([SalesOrderID]) ON DELETE CASCADEALTER TABLE [Sales].[SalesOrderDetail] CHECK CONSTRAINT [FK_SalesOrderDetail_SalesOrderHeader_SalesOrderID]CREATE UNIQUE NONCLUSTERED INDEX [AK_SalesOrderDetail_rowguid] ON [Sales].[SalesOrderDetail] ([rowguid] ASC)CREATE NONCLUSTERED INDEX [IX_SalesOrderDetail_ProductID] ON [Sales].[SalesOrderDetail] ([ProductID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[SalesOrderHeader]')) DROP Table [Sales].[SalesOrderHeader]
GO
CREATE TABLE [Sales].[SalesOrderHeader](	  [SalesOrderID] INT NOT NULL IDENTITY(1,1)	, [RevisionNumber] TINYINT NOT NULL DEFAULT((0))	, [OrderDate] DATETIME NOT NULL DEFAULT(getdate())	, [DueDate] DATETIME NOT NULL	, [ShipDate] DATETIME NULL	, [Status] TINYINT NOT NULL DEFAULT((1))	, [OnlineOrderFlag] FLAG NOT NULL DEFAULT((1))	, [SalesOrderNumber] AS (isnull(N'SO'+CONVERT([nvarchar](23),[SalesOrderID]),N'*** ERROR ***'))	, [PurchaseOrderNumber] ORDERNUMBER COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [AccountNumber] ACCOUNTNUMBER COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [CustomerID] INT NOT NULL	, [SalesPersonID] INT NULL	, [TerritoryID] INT NULL	, [BillToAddressID] INT NOT NULL	, [ShipToAddressID] INT NOT NULL	, [ShipMethodID] INT NOT NULL	, [CreditCardID] INT NULL	, [CreditCardApprovalCode] VARCHAR(15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [CurrencyRateID] INT NULL	, [SubTotal] MONEY NOT NULL DEFAULT((0.00))	, [TaxAmt] MONEY NOT NULL DEFAULT((0.00))	, [Freight] MONEY NOT NULL DEFAULT((0.00))	, [TotalDue] AS (isnull(([SubTotal]+[TaxAmt])+[Freight],(0)))	, [Comment] NVARCHAR(128) COLLATE SQL_Latin1_General_CP1_CI_AS NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_SalesOrderHeader_SalesOrderID] PRIMARY KEY ([SalesOrderID] ASC))ALTER TABLE [Sales].[SalesOrderHeader] WITH CHECK ADD CONSTRAINT [FK_SalesOrderHeader_SalesPerson_SalesPersonID] FOREIGN KEY([SalesPersonID]) REFERENCES [Sales].[SalesPerson] ([BusinessEntityID])ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_SalesPerson_SalesPersonID]ALTER TABLE [Sales].[SalesOrderHeader] WITH CHECK ADD CONSTRAINT [FK_SalesOrderHeader_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID]) REFERENCES [Sales].[SalesTerritory] ([TerritoryID])ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_SalesTerritory_TerritoryID]ALTER TABLE [Sales].[SalesOrderHeader] WITH CHECK ADD CONSTRAINT [FK_SalesOrderHeader_ShipMethod_ShipMethodID] FOREIGN KEY([ShipMethodID]) REFERENCES [Purchasing].[ShipMethod] ([ShipMethodID])ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_ShipMethod_ShipMethodID]ALTER TABLE [Sales].[SalesOrderHeader] WITH CHECK ADD CONSTRAINT [FK_SalesOrderHeader_Address_BillToAddressID] FOREIGN KEY([BillToAddressID]) REFERENCES [Person].[Address] ([AddressID])ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_Address_BillToAddressID]ALTER TABLE [Sales].[SalesOrderHeader] WITH CHECK ADD CONSTRAINT [FK_SalesOrderHeader_Address_ShipToAddressID] FOREIGN KEY([ShipToAddressID]) REFERENCES [Person].[Address] ([AddressID])ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_Address_ShipToAddressID]ALTER TABLE [Sales].[SalesOrderHeader] WITH CHECK ADD CONSTRAINT [FK_SalesOrderHeader_CreditCard_CreditCardID] FOREIGN KEY([CreditCardID]) REFERENCES [Sales].[CreditCard] ([CreditCardID])ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_CreditCard_CreditCardID]ALTER TABLE [Sales].[SalesOrderHeader] WITH CHECK ADD CONSTRAINT [FK_SalesOrderHeader_CurrencyRate_CurrencyRateID] FOREIGN KEY([CurrencyRateID]) REFERENCES [Sales].[CurrencyRate] ([CurrencyRateID])ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_CurrencyRate_CurrencyRateID]ALTER TABLE [Sales].[SalesOrderHeader] WITH CHECK ADD CONSTRAINT [FK_SalesOrderHeader_Customer_CustomerID] FOREIGN KEY([CustomerID]) REFERENCES [Sales].[Customer] ([CustomerID])ALTER TABLE [Sales].[SalesOrderHeader] CHECK CONSTRAINT [FK_SalesOrderHeader_Customer_CustomerID]CREATE UNIQUE NONCLUSTERED INDEX [AK_SalesOrderHeader_rowguid] ON [Sales].[SalesOrderHeader] ([rowguid] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_SalesOrderHeader_SalesOrderNumber] ON [Sales].[SalesOrderHeader] ([SalesOrderNumber] ASC)CREATE NONCLUSTERED INDEX [IX_SalesOrderHeader_CustomerID] ON [Sales].[SalesOrderHeader] ([CustomerID] ASC)CREATE NONCLUSTERED INDEX [IX_SalesOrderHeader_SalesPersonID] ON [Sales].[SalesOrderHeader] ([SalesPersonID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[SalesOrderHeaderSalesReason]')) DROP Table [Sales].[SalesOrderHeaderSalesReason]
GO
CREATE TABLE [Sales].[SalesOrderHeaderSalesReason](	  [SalesOrderID] INT NOT NULL	, [SalesReasonID] INT NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_SalesOrderHeaderSalesReason_SalesOrderID_SalesReasonID] PRIMARY KEY ([SalesOrderID] ASC, [SalesReasonID] ASC))ALTER TABLE [Sales].[SalesOrderHeaderSalesReason] WITH CHECK ADD CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID] FOREIGN KEY([SalesReasonID]) REFERENCES [Sales].[SalesReason] ([SalesReasonID])ALTER TABLE [Sales].[SalesOrderHeaderSalesReason] CHECK CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesReason_SalesReasonID]ALTER TABLE [Sales].[SalesOrderHeaderSalesReason] WITH CHECK ADD CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID] FOREIGN KEY([SalesOrderID]) REFERENCES [Sales].[SalesOrderHeader] ([SalesOrderID]) ON DELETE CASCADEALTER TABLE [Sales].[SalesOrderHeaderSalesReason] CHECK CONSTRAINT [FK_SalesOrderHeaderSalesReason_SalesOrderHeader_SalesOrderID]

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[SalesPerson]')) DROP Table [Sales].[SalesPerson]
GO
CREATE TABLE [Sales].[SalesPerson](	  [BusinessEntityID] INT NOT NULL	, [TerritoryID] INT NULL	, [SalesQuota] MONEY NULL	, [Bonus] MONEY NOT NULL DEFAULT((0.00))	, [CommissionPct] SMALLMONEY NOT NULL DEFAULT((0.00))	, [SalesYTD] MONEY NOT NULL DEFAULT((0.00))	, [SalesLastYear] MONEY NOT NULL DEFAULT((0.00))	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_SalesPerson_BusinessEntityID] PRIMARY KEY ([BusinessEntityID] ASC))ALTER TABLE [Sales].[SalesPerson] WITH CHECK ADD CONSTRAINT [FK_SalesPerson_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID]) REFERENCES [Sales].[SalesTerritory] ([TerritoryID])ALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [FK_SalesPerson_SalesTerritory_TerritoryID]ALTER TABLE [Sales].[SalesPerson] WITH CHECK ADD CONSTRAINT [FK_SalesPerson_Employee_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [HumanResources].[Employee] ([BusinessEntityID])ALTER TABLE [Sales].[SalesPerson] CHECK CONSTRAINT [FK_SalesPerson_Employee_BusinessEntityID]CREATE UNIQUE NONCLUSTERED INDEX [AK_SalesPerson_rowguid] ON [Sales].[SalesPerson] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[SalesPersonQuotaHistory]')) DROP Table [Sales].[SalesPersonQuotaHistory]
GO
CREATE TABLE [Sales].[SalesPersonQuotaHistory](	  [BusinessEntityID] INT NOT NULL	, [QuotaDate] DATETIME NOT NULL	, [SalesQuota] MONEY NOT NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_SalesPersonQuotaHistory_BusinessEntityID_QuotaDate] PRIMARY KEY ([BusinessEntityID] ASC, [QuotaDate] ASC))ALTER TABLE [Sales].[SalesPersonQuotaHistory] WITH CHECK ADD CONSTRAINT [FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [Sales].[SalesPerson] ([BusinessEntityID])ALTER TABLE [Sales].[SalesPersonQuotaHistory] CHECK CONSTRAINT [FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID]CREATE UNIQUE NONCLUSTERED INDEX [AK_SalesPersonQuotaHistory_rowguid] ON [Sales].[SalesPersonQuotaHistory] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[SalesReason]')) DROP Table [Sales].[SalesReason]
GO
CREATE TABLE [Sales].[SalesReason](	  [SalesReasonID] INT NOT NULL IDENTITY(1,1)	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ReasonType] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_SalesReason_SalesReasonID] PRIMARY KEY ([SalesReasonID] ASC))

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[SalesTaxRate]')) DROP Table [Sales].[SalesTaxRate]
GO
CREATE TABLE [Sales].[SalesTaxRate](	  [SalesTaxRateID] INT NOT NULL IDENTITY(1,1)	, [StateProvinceID] INT NOT NULL	, [TaxType] TINYINT NOT NULL	, [TaxRate] SMALLMONEY NOT NULL DEFAULT((0.00))	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_SalesTaxRate_SalesTaxRateID] PRIMARY KEY ([SalesTaxRateID] ASC))ALTER TABLE [Sales].[SalesTaxRate] WITH CHECK ADD CONSTRAINT [FK_SalesTaxRate_StateProvince_StateProvinceID] FOREIGN KEY([StateProvinceID]) REFERENCES [Person].[StateProvince] ([StateProvinceID])ALTER TABLE [Sales].[SalesTaxRate] CHECK CONSTRAINT [FK_SalesTaxRate_StateProvince_StateProvinceID]CREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTaxRate_StateProvinceID_TaxType] ON [Sales].[SalesTaxRate] ([StateProvinceID] ASC, [TaxType] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTaxRate_rowguid] ON [Sales].[SalesTaxRate] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[SalesTerritory]')) DROP Table [Sales].[SalesTerritory]
GO
CREATE TABLE [Sales].[SalesTerritory](	  [TerritoryID] INT NOT NULL IDENTITY(1,1)	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [CountryRegionCode] NVARCHAR(3) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Group] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [SalesYTD] MONEY NOT NULL DEFAULT((0.00))	, [SalesLastYear] MONEY NOT NULL DEFAULT((0.00))	, [CostYTD] MONEY NOT NULL DEFAULT((0.00))	, [CostLastYear] MONEY NOT NULL DEFAULT((0.00))	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_SalesTerritory_TerritoryID] PRIMARY KEY ([TerritoryID] ASC))ALTER TABLE [Sales].[SalesTerritory] WITH CHECK ADD CONSTRAINT [FK_SalesTerritory_CountryRegion_CountryRegionCode] FOREIGN KEY([CountryRegionCode]) REFERENCES [Person].[CountryRegion] ([CountryRegionCode])ALTER TABLE [Sales].[SalesTerritory] CHECK CONSTRAINT [FK_SalesTerritory_CountryRegion_CountryRegionCode]CREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTerritory_Name] ON [Sales].[SalesTerritory] ([Name] ASC)CREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTerritory_rowguid] ON [Sales].[SalesTerritory] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[SalesTerritoryHistory]')) DROP Table [Sales].[SalesTerritoryHistory]
GO
CREATE TABLE [Sales].[SalesTerritoryHistory](	  [BusinessEntityID] INT NOT NULL	, [TerritoryID] INT NOT NULL	, [StartDate] DATETIME NOT NULL	, [EndDate] DATETIME NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_SalesTerritoryHistory_BusinessEntityID_StartDate_TerritoryID] PRIMARY KEY ([BusinessEntityID] ASC, [TerritoryID] ASC, [StartDate] ASC))ALTER TABLE [Sales].[SalesTerritoryHistory] WITH CHECK ADD CONSTRAINT [FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [Sales].[SalesPerson] ([BusinessEntityID])ALTER TABLE [Sales].[SalesTerritoryHistory] CHECK CONSTRAINT [FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID]ALTER TABLE [Sales].[SalesTerritoryHistory] WITH CHECK ADD CONSTRAINT [FK_SalesTerritoryHistory_SalesTerritory_TerritoryID] FOREIGN KEY([TerritoryID]) REFERENCES [Sales].[SalesTerritory] ([TerritoryID])ALTER TABLE [Sales].[SalesTerritoryHistory] CHECK CONSTRAINT [FK_SalesTerritoryHistory_SalesTerritory_TerritoryID]CREATE UNIQUE NONCLUSTERED INDEX [AK_SalesTerritoryHistory_rowguid] ON [Sales].[SalesTerritoryHistory] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[ShoppingCartItem]')) DROP Table [Sales].[ShoppingCartItem]
GO
CREATE TABLE [Sales].[ShoppingCartItem](	  [ShoppingCartItemID] INT NOT NULL IDENTITY(1,1)	, [ShoppingCartID] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Quantity] INT NOT NULL DEFAULT((1))	, [ProductID] INT NOT NULL	, [DateCreated] DATETIME NOT NULL DEFAULT(getdate())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_ShoppingCartItem_ShoppingCartItemID] PRIMARY KEY ([ShoppingCartItemID] ASC))ALTER TABLE [Sales].[ShoppingCartItem] WITH CHECK ADD CONSTRAINT [FK_ShoppingCartItem_Product_ProductID] FOREIGN KEY([ProductID]) REFERENCES [Production].[Product] ([ProductID])ALTER TABLE [Sales].[ShoppingCartItem] CHECK CONSTRAINT [FK_ShoppingCartItem_Product_ProductID]CREATE NONCLUSTERED INDEX [IX_ShoppingCartItem_ShoppingCartID_ProductID] ON [Sales].[ShoppingCartItem] ([ShoppingCartID] ASC, [ProductID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[SpecialOffer]')) DROP Table [Sales].[SpecialOffer]
GO
CREATE TABLE [Sales].[SpecialOffer](	  [SpecialOfferID] INT NOT NULL IDENTITY(1,1)	, [Description] NVARCHAR(255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [DiscountPct] SMALLMONEY NOT NULL DEFAULT((0.00))	, [Type] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [Category] NVARCHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [StartDate] DATETIME NOT NULL	, [EndDate] DATETIME NOT NULL	, [MinQty] INT NOT NULL DEFAULT((0))	, [MaxQty] INT NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_SpecialOffer_SpecialOfferID] PRIMARY KEY ([SpecialOfferID] ASC))CREATE UNIQUE NONCLUSTERED INDEX [AK_SpecialOffer_rowguid] ON [Sales].[SpecialOffer] ([rowguid] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[SpecialOfferProduct]')) DROP Table [Sales].[SpecialOfferProduct]
GO
CREATE TABLE [Sales].[SpecialOfferProduct](	  [SpecialOfferID] INT NOT NULL	, [ProductID] INT NOT NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_SpecialOfferProduct_SpecialOfferID_ProductID] PRIMARY KEY ([SpecialOfferID] ASC, [ProductID] ASC))ALTER TABLE [Sales].[SpecialOfferProduct] WITH CHECK ADD CONSTRAINT [FK_SpecialOfferProduct_Product_ProductID] FOREIGN KEY([ProductID]) REFERENCES [Production].[Product] ([ProductID])ALTER TABLE [Sales].[SpecialOfferProduct] CHECK CONSTRAINT [FK_SpecialOfferProduct_Product_ProductID]ALTER TABLE [Sales].[SpecialOfferProduct] WITH CHECK ADD CONSTRAINT [FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID] FOREIGN KEY([SpecialOfferID]) REFERENCES [Sales].[SpecialOffer] ([SpecialOfferID])ALTER TABLE [Sales].[SpecialOfferProduct] CHECK CONSTRAINT [FK_SpecialOfferProduct_SpecialOffer_SpecialOfferID]CREATE UNIQUE NONCLUSTERED INDEX [AK_SpecialOfferProduct_rowguid] ON [Sales].[SpecialOfferProduct] ([rowguid] ASC)CREATE NONCLUSTERED INDEX [IX_SpecialOfferProduct_ProductID] ON [Sales].[SpecialOfferProduct] ([ProductID] ASC)

GO
IF EXISTS(SELECT 1 FROM sys.Tables WHERE[object_id] = OBJECT_ID('[Sales].[Store]')) DROP Table [Sales].[Store]
GO
CREATE TABLE [Sales].[Store](	  [BusinessEntityID] INT NOT NULL	, [Name] NAME COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL	, [SalesPersonID] INT NULL	, [Demographics] XML NULL	, [rowguid] UNIQUEIDENTIFIER NOT NULL DEFAULT(newid())	, [ModifiedDate] DATETIME NOT NULL DEFAULT(getdate())	, CONSTRAINT [PK_Store_BusinessEntityID] PRIMARY KEY ([BusinessEntityID] ASC))ALTER TABLE [Sales].[Store] WITH CHECK ADD CONSTRAINT [FK_Store_SalesPerson_SalesPersonID] FOREIGN KEY([SalesPersonID]) REFERENCES [Sales].[SalesPerson] ([BusinessEntityID])ALTER TABLE [Sales].[Store] CHECK CONSTRAINT [FK_Store_SalesPerson_SalesPersonID]ALTER TABLE [Sales].[Store] WITH CHECK ADD CONSTRAINT [FK_Store_BusinessEntity_BusinessEntityID] FOREIGN KEY([BusinessEntityID]) REFERENCES [Person].[BusinessEntity] ([BusinessEntityID])ALTER TABLE [Sales].[Store] CHECK CONSTRAINT [FK_Store_BusinessEntity_BusinessEntityID]CREATE UNIQUE NONCLUSTERED INDEX [AK_Store_rowguid] ON [Sales].[Store] ([rowguid] ASC)CREATE NONCLUSTERED INDEX [IX_Store_SalesPersonID] ON [Sales].[Store] ([SalesPersonID] ASC)

GO
